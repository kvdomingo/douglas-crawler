"""init

Revision ID: bd3c5d0ca4d4
Revises:
Create Date: 2024-11-18 12:08:22.533627

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "bd3c5d0ca4d4"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "products",
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("ean", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("average_rating", sa.Float(), nullable=False),
        sa.Column("number_of_reviews", sa.Integer(), nullable=False),
        sa.Column("image", sa.String(), nullable=False),
        sa.Column("features", sa.ARRAY(sa.TEXT()), nullable=False),
        sa.Column("id", sa.VARCHAR(length=26), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_products_code"), "products", ["code"], unique=True)
    op.create_index(op.f("ix_products_ean"), "products", ["ean"], unique=True)
    op.create_index(op.f("ix_products_id"), "products", ["id"], unique=True)
    op.create_table(
        "product_classifications",
        sa.Column("product_id", sa.VARCHAR(length=26), nullable=False),
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("id", sa.VARCHAR(length=26), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "product_id", "key", name="uq_product_classifications_product_key"
        ),
    )
    op.create_index(
        op.f("ix_product_classifications_id"),
        "product_classifications",
        ["id"],
        unique=True,
    )
    op.create_table(
        "product_variants",
        sa.Column("product_id", sa.VARCHAR(length=26), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("base_price", sa.Float(), nullable=False),
        sa.Column("original_price", sa.Float(), nullable=False),
        sa.Column("discounted_price", sa.Float(), nullable=False),
        sa.Column("currency", sa.String(), nullable=False),
        sa.Column("id", sa.VARCHAR(length=26), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_product_variants_id"), "product_variants", ["id"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_product_variants_id"), table_name="product_variants")
    op.drop_table("product_variants")
    op.drop_index(
        op.f("ix_product_classifications_id"), table_name="product_classifications"
    )
    op.drop_table("product_classifications")
    op.drop_index(op.f("ix_products_id"), table_name="products")
    op.drop_index(op.f("ix_products_ean"), table_name="products")
    op.drop_index(op.f("ix_products_code"), table_name="products")
    op.drop_table("products")
    # ### end Alembic commands ###
